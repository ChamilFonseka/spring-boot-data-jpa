-- Drop existing tables if they exist
DROP TABLE IF EXISTS public.pets_vets;
DROP TABLE IF EXISTS public.cats;
DROP TABLE IF EXISTS public.dogs;
DROP TABLE IF EXISTS public.pets;
DROP TABLE IF EXISTS public.vets;
DROP TABLE IF EXISTS public.owners;

-- Create table for owners
CREATE TABLE public.owners (
    id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    phone_number VARCHAR(255) NOT NULL,
    street VARCHAR(255),
    city VARCHAR(255),
    state VARCHAR(255),
    zip_code VARCHAR(255),
    created_date TIMESTAMP(6) WITH TIME ZONE NOT NULL,
    last_modified_date TIMESTAMP(6) WITH TIME ZONE,
    version BIGINT,
    PRIMARY KEY (id)
);

-- Create table for vets
CREATE TABLE public.vets (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    phone_number VARCHAR(255) NOT NULL,
    created_date TIMESTAMP(6) WITH TIME ZONE NOT NULL,
    last_modified_date TIMESTAMP(6) WITH TIME ZONE,
    version BIGINT,
    PRIMARY KEY (id)
);

-- Create table for pets
CREATE TABLE public.pets (
    id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY,
    name VARCHAR(255) NOT NULL,
    date_of_birth DATE NOT NULL,
    breed VARCHAR(255) NOT NULL,
    type VARCHAR(255) NOT NULL CHECK (type IN ('CAT', 'DOG')),
    owner_id BIGINT NOT NULL,
    created_date TIMESTAMP(6) WITH TIME ZONE NOT NULL,
    last_modified_date TIMESTAMP(6) WITH TIME ZONE,
    version BIGINT,
    PRIMARY KEY (id)
);

-- Create table for cats
CREATE TABLE public.cats (
    id BIGINT NOT NULL,
    registry VARCHAR(255),
    PRIMARY KEY (id),
    FOREIGN KEY (id) REFERENCES public.pets(id)
);

-- Create table for dogs
CREATE TABLE public.dogs (
    id BIGINT NOT NULL,
    sound VARCHAR(255),
    size VARCHAR(255),
    coat_length VARCHAR(255),
    PRIMARY KEY (id),
    FOREIGN KEY (id) REFERENCES public.pets(id)
);

-- Create join table for pets and vets
CREATE TABLE public.pets_vets (
    pet_id BIGINT NOT NULL,
    vet_id BIGINT NOT NULL,
    PRIMARY KEY (pet_id, vet_id),
    FOREIGN KEY (pet_id) REFERENCES public.pets(id),
    FOREIGN KEY (vet_id) REFERENCES public.vets(id)
);